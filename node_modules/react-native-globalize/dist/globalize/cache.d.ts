/*!
 * React Native Globalize
 *
 * Copyright 2015-2020 Josh Swan
 * Released under the MIT license
 * https://github.com/joshswan/react-native-globalize/blob/master/LICENSE
 */
import { CurrencyFormatter, DateFormatter, DateParser, MessageFormatter, NumberFormatter, NumberParser, PluralGenerator, RelativeTimeFormatter, UnitFormatter } from './types';
export interface Cache {
    currency: Record<string, CurrencyFormatter>;
    date: Record<string, DateFormatter>;
    dateParsers: Record<string, DateParser>;
    message: Record<string, MessageFormatter>;
    number: Record<string, NumberFormatter>;
    numberParsers: Record<string, NumberParser>;
    plural: Record<string, PluralGenerator>;
    relativeTime: Record<string, RelativeTimeFormatter>;
    unit: Record<string, UnitFormatter>;
}
export declare type CacheValue = CurrencyFormatter | DateFormatter | DateParser | MessageFormatter | NumberFormatter | NumberParser | PluralGenerator | RelativeTimeFormatter | UnitFormatter | any;
export declare function createCache(): Cache;
interface MemoizeFormatterFn {
    <T extends {
        (...args: any[]): any;
    }>(builder: T, cache: Record<string, CacheValue>): (...args: Parameters<T>) => any;
}
export declare const memoizeFormatter: MemoizeFormatterFn;
export {};
