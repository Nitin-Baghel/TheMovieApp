/*!
 * React Native Globalize
 *
 * Copyright 2015-2020 Josh Swan
 * Released under the MIT license
 * https://github.com/joshswan/react-native-globalize/blob/master/LICENSE
 */
/// <reference types="react" />
export declare const FormattedCurrency: import("react").FC<Pick<import("..").CurrencyFormatterOptions, "round" | "compact" | "symbolForm" | "minimumIntegerDigits" | "minimumFractionDigits" | "maximumFractionDigits" | "minimumSignificantDigits" | "maximumSignificantDigits" | "useGrouping"> & {
    currency?: string | undefined;
    numberStyle?: "symbol" | "code" | "accounting" | "name" | undefined;
    value: number;
} & Pick<import("react-native").TextProps, "style" | "accessible" | "accessibilityLabel" | "allowFontScaling" | "adjustsFontSizeToFit">>;
export declare const FormattedDate: import("react").FC<import("globalize").DateFormatterOptions & {
    value: Date;
} & Pick<import("react-native").TextProps, "style" | "accessible" | "accessibilityLabel" | "allowFontScaling" | "adjustsFontSizeToFit">>;
export declare const FormattedMessage: import("react").FC<import("..").MessageFormatterOptions & {
    [value: string]: any;
    id: string | string[];
    values?: Record<string, string | number | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)>> | undefined;
} & Pick<import("react-native").TextProps, "style" | "accessible" | "accessibilityLabel" | "allowFontScaling" | "adjustsFontSizeToFit">>;
export declare const FormattedNumber: import("react").FC<Pick<import("globalize").NumberFormatterOptions, "round" | "compact" | "minimumIntegerDigits" | "minimumFractionDigits" | "maximumFractionDigits" | "minimumSignificantDigits" | "maximumSignificantDigits" | "useGrouping"> & {
    numberStyle?: "decimal" | "percent" | undefined;
    value: number;
} & Pick<import("react-native").TextProps, "style" | "accessible" | "accessibilityLabel" | "allowFontScaling" | "adjustsFontSizeToFit">>;
export declare const FormattedRelativeTime: import("react").FC<import("globalize").RelativeTimeFormatterOptions & {
    unit: "day" | "hour" | "minute" | "month" | "second" | "year" | "auto" | "quarter" | "week" | "best";
    value: number | Date;
} & Pick<import("react-native").TextProps, "style" | "accessible" | "accessibilityLabel" | "allowFontScaling" | "adjustsFontSizeToFit">>;
export declare const FormattedUnit: import("react").FC<import("..").UnitFormatterOptions & {
    unit: string;
    value: number;
} & Pick<import("react-native").TextProps, "style" | "accessible" | "accessibilityLabel" | "allowFontScaling" | "adjustsFontSizeToFit">>;
export declare const FormattedTime: import("react").FC<import("globalize").DateFormatterOptions & {
    value: Date;
} & Pick<import("react-native").TextProps, "style" | "accessible" | "accessibilityLabel" | "allowFontScaling" | "adjustsFontSizeToFit">>;
export * from './FormattedPlural';
export * from './GlobalizeProvider';
export * from './withGlobalize';
export { GlobalizeProvider as FormattedProvider } from './GlobalizeProvider';
export { TextProps } from './utils';
