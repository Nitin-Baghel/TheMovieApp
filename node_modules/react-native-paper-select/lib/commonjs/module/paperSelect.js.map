{"version":3,"sources":["paperSelect.tsx"],"names":["PaperSelect","label","arrayList","selectedArrayList","multiEnable","value","onSelection","disabled","hideSearchBox","selectAllEnable","textInputMode","theme","themeOverrides","inputRef","dialogTitle","selectAllText","searchText","dialogCloseButtonText","dialogDoneButtonText","errorText","containerStyle","textInputStyle","textInputOutlineStyle","dialogStyle","dialogTitleStyle","searchStyle","dialogCloseButtonStyle","dialogDoneButtonStyle","errorStyle","textColor","textInputProps","textInputPropOverrides","checkboxProps","checkboxPropsOverrides","searchbarProps","searchbarPropsOverrides","underlineColor","activeUnderlineColor","outlineColor","activeOutlineColor","left","right","styles","textInputIcon","height","Dimensions","get","searchKey","setSearchKey","arrayHolder","setArrayHolder","list","setList","selectedList","setSelectedList","selfInputRef","selectInputRef","visible","setVisible","showDialog","_hideDialog","data","selectedData","finalText","forEach","val","index","el","_id","length","text","current","blur","_closeDialog","_onFocus","_onChecked","item","indexSelected","findIndex","splice","push","_onCheckedSingle","_exists","_temp","find","_isCheckedAll","_checkAll","slice","_renderItem","touchableItem","_filterFunction","newData","filter","toLowerCase","includes","container","textInput","undefined","color","colors","error","dialog","paddingHorizontal","searchbar","toString","dialogScrollView","maxHeight","marginBottom","StyleSheet","create","width","backgroundColor","borderRadius","flexDirection","alignItems","justifyContent","alignSelf","alignContent","borderColor","borderWidth","marginHorizontal","marginTop"],"mappings":"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","sourcesContent":["import React, { memo, useRef, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Dimensions,\n  FlatList,\n} from 'react-native';\nimport {\n  TextInput,\n  Button,\n  Dialog,\n  Portal,\n  Searchbar,\n  ThemeProvider,\n  useTheme,\n  Text,\n} from 'react-native-paper';\nimport CheckboxInput from '../components/checkBox';\nimport type {\n  ListItem,\n  PaperSelectProps,\n  PaperSelectTextInputProps,\n} from '../interface/paperSelect.interface';\nimport type { InternalTheme } from 'react-native-paper/lib/typescript/src/types';\n\nconst PaperSelect = ({\n  // Required props\n  label,\n  arrayList,\n  selectedArrayList,\n  multiEnable,\n  value,\n  onSelection,\n\n  // Core props\n  disabled = false,\n  hideSearchBox = false,\n  selectAllEnable = true,\n  textInputMode = 'flat',\n  theme: themeOverrides,\n  inputRef,\n\n  // Localization props\n  dialogTitle,\n  selectAllText = 'Select all',\n  searchText = 'Search',\n  dialogCloseButtonText = 'Close',\n  dialogDoneButtonText = 'Done',\n  errorText,\n\n  // Style props\n  containerStyle,\n  textInputStyle,\n  textInputOutlineStyle,\n  dialogStyle,\n  dialogTitleStyle,\n  searchStyle,\n  dialogCloseButtonStyle,\n  dialogDoneButtonStyle,\n  errorStyle,\n  textColor,\n\n  // Component props\n  textInputProps: textInputPropOverrides,\n  checkboxProps: checkboxPropsOverrides,\n  searchbarProps: searchbarPropsOverrides,\n}: PaperSelectProps) => {\n  const theme = useTheme<InternalTheme>(themeOverrides);\n\n  const textInputProps: PaperSelectTextInputProps = {\n    underlineColor: textInputPropOverrides?.underlineColor || 'black',\n    activeUnderlineColor:\n      textInputPropOverrides?.activeUnderlineColor || 'black',\n    outlineColor: textInputPropOverrides?.outlineColor || 'black',\n    activeOutlineColor: textInputPropOverrides?.activeOutlineColor || 'black',\n    left: textInputPropOverrides?.left,\n    right: textInputPropOverrides?.right ?? (\n      <TextInput.Icon\n        style={styles.textInputIcon}\n        size={20}\n        icon=\"chevron-down\"\n      />\n    ),\n  };\n\n  const { height } = Dimensions.get('window');\n\n  // console.log(height);\n\n  const [searchKey, setSearchKey] = useState<string>('');\n\n  const [arrayHolder, setArrayHolder] = useState<Array<ListItem>>([\n    ...arrayList,\n  ]);\n  const [list, setList] = useState<Array<ListItem>>([...arrayList]);\n  const [selectedList, setSelectedList] = useState<Array<ListItem>>([\n    ...selectedArrayList,\n  ]);\n\n  const selfInputRef = useRef<any>(null);\n  const selectInputRef = inputRef ?? selfInputRef;\n\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const showDialog = () => setVisible(true);\n\n  const _hideDialog = () => {\n    setSearchKey('');\n    var data: Array<ListItem> = [...arrayHolder];\n    // console.log(selectedList);\n    var selectedData: Array<ListItem> = [...selectedList];\n    // console.log(selectedData);\n    let finalText: string = '';\n    selectedData.forEach((val, index) => {\n      data.forEach((el) => {\n        if (val._id === el._id) {\n          finalText +=\n            index !== selectedData.length - 1 ? `${el.value}, ` : `${el.value}`;\n        }\n      });\n    });\n\n    onSelection({\n      text: finalText,\n      selectedList: selectedData,\n    });\n\n    setVisible(false);\n\n    if (selectInputRef && selectInputRef.current) {\n      selectInputRef.current.blur();\n    }\n  };\n\n  const _closeDialog = () => {\n    setVisible(false);\n    setSearchKey('');\n    if (selectInputRef && selectInputRef.current) {\n      selectInputRef.current.blur();\n    }\n  };\n\n  const _onFocus = () => {\n    setArrayHolder([...arrayList]);\n    setList([...arrayList]);\n    setSelectedList([...selectedArrayList]);\n    showDialog();\n  };\n\n  const _onChecked = (item: any) => {\n    var selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\n    if (indexSelected > -1) {\n      selectedData.splice(indexSelected, 1);\n    } else {\n      selectedData.push(item);\n    }\n    setSelectedList([...selectedData]);\n  };\n\n  const _onCheckedSingle = (item: any) => {\n    var selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\n    if (indexSelected > -1) {\n      // selectedData.splice(indexSelected, 1);\n      selectedData = [];\n    } else {\n      selectedData = [];\n      selectedData.push(item);\n    }\n    // console.log(selectedData);\n    setSelectedList([...selectedData]);\n  };\n\n  const _exists = (item: any) => {\n    // console.log(selectedList);\n    let _temp = [...selectedList];\n    return _temp.find((val: any) => val._id === item._id) ? true : false;\n  };\n\n  const _isCheckedAll = () => {\n    const data = [...list];\n    const selectedData = [...selectedList];\n    return selectedData.length !== 0 && selectedData.length === data.length;\n  };\n\n  const _checkAll = () => {\n    const data = [...list];\n    var selectedData = [...selectedList];\n    if (selectedData.length === data.length) {\n      selectedData = [];\n    } else if (selectedData.length === 0 || selectedData.length > 0) {\n      selectedData = data.slice(0);\n    }\n\n    setSelectedList([...selectedData]);\n  };\n\n  // const _renderListForMulti = () => {\n  //   return list.map((item, key) => {\n  //     return (\n  //       <TouchableOpacity\n  //         style={styles.touchableItem}\n  //         key={key}\n  //         onPress={() => {\n  //           _onChecked(item);\n  //         }}\n  //       >\n  //         <CheckboxInput\n  //           {...checkboxPropsOverrides}\n  //           isChecked={_exists(item)}\n  //           label={item.value}\n  //         />\n  //       </TouchableOpacity>\n  //     );\n  //   });\n  // };\n\n  const _renderItem = ({ item }: { item: any }) => (\n    <TouchableOpacity\n      style={styles.touchableItem}\n      onPress={() =>\n        multiEnable === true ? _onChecked(item) : _onCheckedSingle(item)\n      }\n    >\n      <CheckboxInput\n        {...checkboxPropsOverrides}\n        isChecked={_exists(item)}\n        label={item.value}\n      />\n    </TouchableOpacity>\n  );\n\n  // const _renderListForSingle = () => {\n  //   return list.map((item, key) => {\n  //     return (\n  //       <TouchableOpacity\n  //         style={styles.touchableItem}\n  //         key={key}\n  //         onPress={() => {\n  //           _onCheckedSingle(item);\n  //         }}\n  //       >\n  //         <CheckboxInput\n  //           {...checkboxPropsOverrides}\n  //           isChecked={_exists(item)}\n  //           label={item.value}\n  //         />\n  //       </TouchableOpacity>\n  //     );\n  //   });\n  // };\n\n  const _filterFunction = (text: string) => {\n    setSearchKey(text);\n    const newData = arrayHolder.filter((item) =>\n      item.value.toLowerCase().includes(text.toLowerCase())\n    );\n    setList(newData);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <View style={[styles.container, containerStyle]}>\n        <TextInput\n          {...textInputProps}\n          ref={selectInputRef}\n          disabled={disabled}\n          style={[styles.textInput, textInputStyle]}\n          outlineStyle={textInputOutlineStyle}\n          label={label}\n          mode={textInputMode}\n          onFocus={disabled ? undefined : _onFocus}\n          showSoftInputOnFocus={false}\n          value={value}\n          textColor={textColor}\n        />\n        {errorText ? (\n          <Text\n            style={[\n              {\n                color: theme.colors.error,\n              },\n              errorStyle,\n            ]}\n          >\n            {errorText}\n          </Text>\n        ) : null}\n      </View>\n\n      <View>\n        <Portal>\n          <Dialog\n            style={[styles.dialog, dialogStyle]}\n            visible={visible}\n            dismissable={false}\n          >\n            <Dialog.Title style={dialogTitleStyle}>\n              {dialogTitle ?? label}\n            </Dialog.Title>\n            <Dialog.ScrollArea style={{ paddingHorizontal: 14 }}>\n              {!hideSearchBox ? (\n                <Searchbar\n                  {...searchbarPropsOverrides}\n                  value={searchKey}\n                  placeholder={searchText}\n                  onChangeText={(text: string) => _filterFunction(text)}\n                  style={[styles.searchbar, searchStyle]}\n                />\n              ) : null}\n              {multiEnable === true && selectAllEnable === true ? (\n                <TouchableOpacity\n                  style={styles.touchableItem}\n                  onPress={() => {\n                    _checkAll();\n                  }}\n                >\n                  <CheckboxInput\n                    {...checkboxPropsOverrides}\n                    isChecked={_isCheckedAll()}\n                    label={selectAllText}\n                  />\n                </TouchableOpacity>\n              ) : null}\n              {/* <ScrollView\n                style={\n                  (styles.dialogScrollView,\n                    { maxHeight: height - (height * 40) / 100, marginBottom: 8 })\n                }\n                keyboardShouldPersistTaps=\"handled\"\n              >\n                {multiEnable === true\n                  ? _renderListForMulti()\n                  : _renderListForSingle()}\n              </ScrollView> */}\n              <FlatList\n                data={list}\n                renderItem={_renderItem}\n                keyExtractor={(item) => item._id.toString()}\n                keyboardShouldPersistTaps=\"handled\"\n                style={\n                  (styles.dialogScrollView,\n                  { maxHeight: height - (height * 40) / 100, marginBottom: 8 })\n                }\n              />\n            </Dialog.ScrollArea>\n            <Dialog.Actions>\n              <Button\n                labelStyle={dialogCloseButtonStyle}\n                onPress={_closeDialog}\n              >\n                {dialogCloseButtonText}\n              </Button>\n              <Button labelStyle={dialogDoneButtonStyle} onPress={_hideDialog}>\n                {dialogDoneButtonText}\n              </Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n      </View>\n    </ThemeProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginBottom: 10,\n  },\n  dialog: {\n    backgroundColor: 'white',\n    borderRadius: 5,\n  },\n  dialogScrollView: {\n    width: '100%',\n  },\n  touchableItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  textInput: {\n    // backgroundColor: '#fff',\n    // color: '#000',\n  },\n  textInputIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    alignContent: 'center',\n  },\n  searchbar: {\n    borderColor: '#777777',\n    backgroundColor: '#F1F1F2',\n    borderWidth: 0.25,\n    marginBottom: 10,\n    marginHorizontal: 8,\n    color: '#000',\n    marginTop: 12,\n  },\n});\n\nexport default memo(PaperSelect);\n"]}